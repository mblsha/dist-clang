import "base.proto";

// It's not possible to optimize for LITE_RUNTIME, since the configuration uses
// |TextFormat::Parse()|, which uses the descriptor and the reflection.

package dist_clang.proto;

message Universal {
  extensions 1 to 200;
}

message Test {
  required string field1 = 1;
  optional string field2 = 2;
  repeated string field3 = 3;

  extend Universal {
    optional Test extension = 1;
  }
}

message Status {
  enum Code {
    OK = 0;
    INCONSEQUENT  = 1;
    NETWORK       = 2;
    BAD_MESSAGE   = 3;
    EMPTY_MESSAGE = 4;
    EXECUTION     = 5;
    OVERLOAD      = 6;
    NO_VERSION    = 7;
  }

  required Code code = 1 [default=OK];
  optional string description = 2;

  extend Universal {
    optional Status extension = 2;
  }
}

message Flags {

  required Compiler compiler  = 1;  // original compiler executable.
  optional string output      = 2;  // "-o" flag and it's param.
  optional string input       = 3;  // relative path in the last argument.
  repeated string other       = 4;  // all unsorted flags.
  repeated string dependenies = 5;  // "-MMD", "-MF", etc.
  optional string language    = 6;  // "-x" flag and it's param.
  repeated string non_cached  = 7;  // flags, that shouldn't be cached.
}

message Execute {
  required bool remote        = 1;
  required Flags cc_flags     = 2;  // Flags to run compilation.
  optional Flags pp_flags     = 3;  // Flags to run preprocessor.
  optional string current_dir = 4;  // Required for local execution.
  optional string pp_source   = 5;  // Required for remote execution.

  extend Universal {
    optional Execute extension = 3;
  }
}

message RemoteResult {
  required bytes obj          = 1;

  extend Universal {
    optional RemoteResult extension = 4;
  }
}

// Last unused extension index: 5.
